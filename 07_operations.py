# -*- coding: utf-8 -*-
"""07_Operations.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_lJNB76BBFksF-u66yHNMI0fO9rzLeNQ

# Introduction to Pandas

![alt text](http://i1.wp.com/blog.adeel.io/wp-content/uploads/2016/11/pandas1.png?zoom=1.25&fit=818%2C163)

Pandas is an open-source, BSD-licensed Python library providing high-performance, easy-to-use data structures and data analysis tools for the Python programming language. You can think of pandas as an extremely powerful version of Excel, with a lot more features.

## **About iPython Notebooks**

iPython Notebooks are interactive coding environments embedded in a webpage. You will be using iPython notebooks in this class. You only need to write code between the ### START CODE HERE ### and ### END CODE HERE ### comments. After writing your code, you can run the cell by either pressing "SHIFT"+"ENTER" or by clicking on "Run Cell" (denoted by a play symbol) in the left bar of the cell.

**In this notebook you will learn -**

* Series
* DataFrames
* Missing Data
* GroupBy
* Merging, Joining and Concatenating
* Operations
* Data Input and Output

## Importing Pandas
To import Pandas simply write the following:
"""

import pandas as pd

"""# Operations

There are lots of operations with pandas that will be really useful to you, but don't fall into any distinct category. Let's show them here in this lecture:
"""

df = pd.DataFrame({'col1':[1,2,3,4],'col2':[444,555,666,444],'col3':['abc','def','ghi','xyz']})
df.head()

"""### Info on Unique Values"""

df['col2'].unique()

df['col2'].nunique()

df['col2'].value_counts()

"""### Selecting Data"""

#Select from DataFrame using criteria from multiple columns
newdf = df[(df['col1']>2) & (df['col2']==444)]

newdf

"""### Applying Functions"""

def times2(x):
    return x*2

df['col1'].apply(times2)

df['col3'].apply(len)

df['col1'].sum()

"""** Permanently Removing a Column:**"""

del df['col1']

df

"""** Get column and index names: **"""

df.columns

df.index

"""** Sorting and Ordering a DataFrame:**"""

df

df.sort_values(by='col2') #inplace=False by default

"""** Find Null Values or Check for Null Values:**"""

df.isnull()

# Drop rows with NaN Values
df.dropna()

"""** Filling in NaN values with something else: **"""

import numpy as np

df = pd.DataFrame({'col1':[1,2,3,np.nan],
                   'col2':[np.nan,555,666,444],
                   'col3':['abc','def','ghi','xyz']})
df.head()

df.fillna('FILL')

data = {'A':['foo','foo','foo','bar','bar','bar'],
     'B':['one','one','two','two','one','one'],
       'C':['x','y','x','y','x','y'],
       'D':[1,3,2,5,4,1]}

df = pd.DataFrame(data)

df

df.pivot_table(values='D',index=['A', 'B'],columns=['C'])

"""# Great Job!"""